//
//  FirstLevel.swift
//  FindTheWayOut
//
//  Created by Антон Швец on 14/03/2020.
//  Copyright © 2020 Антон Швец. All rights reserved.
//

import UIKit

protocol Levels {
    
    func getLevel() -> LevelLayres
}

struct LevelLayres {
    var backgroundLayer: [[LevelScheme]]
}

class FirstLevel: Levels {
    private let levelLayers: LevelLayres
    
    init() {
        var backgroundLayer = [[LevelScheme]]()
        
        var row = [LevelScheme]()
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallEndTop))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallEndLeft))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallTopLineAndTwoCorners))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallEndRight))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallEndLeft))
        row.append(.singleTile(tile: .wallTopLineAndTwoCorners))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallTopRightCorner))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .wallBottomLeftCorner))
        row.append(.singleTile(tile: .wallEndRight))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallEndTop))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 0))
        row.append(.singleTile(tile: .woodFloor, idNode: 4))
        row.append(.singleTile(tile: .woodFloor, idNode: 4))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .woodFloor, idNode: 1))
        row.append(.singleTile(tile: .wallEndTop))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallTopLeftCorner))
        row.append(.singleTile(tile: .wallBottomRightCorner))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallEndLeft))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallTopRightCorner))
        row.append(.singleTile(tile: .woodFloor, idNode: 4))
        row.append(.singleTile(tile: .woodFloor, idNode: 4))
        row.append(.singleTile(tile: .wallEndLeft))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallRightLineAndTwoCorners))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 6))
        row.append(.singleTile(tile: .woodFloor, idNode: 6))
        row.append(.singleTile(tile: .woodFloor, idNode: 6))
        row.append(.singleTile(tile: .woodFloor, idNode: 6))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 4))
        row.append(.singleTile(tile: .woodFloor, idNode: 4))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .wallEndBottom))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 6))
        row.append(.singleTile(tile: .woodFloor, idNode: 6))
        row.append(.singleTile(tile: .woodFloor, idNode: 6))
        row.append(.singleTile(tile: .woodFloor, idNode: 6))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 4))
        row.append(.singleTile(tile: .woodFloor, idNode: 4))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor, idNode: 3))
        row.append(.singleTile(tile: .woodFloor))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallLeftLineAndTwoCorners))
        row.append(.singleTile(tile: .wallEndRight))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallTopLeftCorner))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallBottomRightCorner))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallEndTop))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .wallTopLeftCorner))
        row.append(.singleTile(tile: .wallBottomLineAndTwoCorners))
        row.append(.singleTile(tile: .wallEndRight))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallEndLeft))
        row.append(.singleTile(tile: .wallTopRightCorner))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .woodFloor, idNode: 5))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .wallLeftLineAndTwoCorners))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .wallEndBottom))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .woodFloor, idNode: 7))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor, idNode: 8))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor, idNode: 9))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .woodFloor, idNode: 10))
        row.append(.singleTile(tile: .wallEndTop))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallEndTop))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .wallEndTop))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallEndLeft))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallTopLineAndTwoCorners))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallSimpleTopLeftCorner))
        row.append(.singleTile(tile: .wallSimpleTopRightCorner))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .wallEndLeft))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallRightLineAndTwoCorners))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .wallSingleLineLeft))
        row.append(.singleTile(tile: .wallSingleLineRight))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .wallSimpleBottomLeftCorner))
        row.append(.singleTile(tile: .wallSimpleRightButtomCorner))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .wallEndBottom))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .wallEndBottom))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .wallEndTop))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .woodFloor, idNode: 11))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .woodFloor, idNode: 12))
        row.append(.singleTile(tile: .wallVerticalCoupleLines))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .woodFloor, idNode: 13))
        row.append(.singleTile(tile: .wallEndTop))
        row.append(.singleTile(tile: .woodFloor))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .woodFloor, idNode: 14))
        row.append(.singleTile(tile: .wallEndTop))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .lawn))
        row.append(.singleTile(tile: .wallTopLeftCorner))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallBottomLineAndTwoCorners))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallBottomLineAndTwoCorners))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallHorizantalCoupleLines))
        row.append(.singleTile(tile: .wallBottomRightCorner))
        
        backgroundLayer.append(row)
        row.removeAll()
        
        let layers = LevelLayres(backgroundLayer: backgroundLayer)
        self.levelLayers = layers
    }
    
    func getLevel() -> LevelLayres {
        return levelLayers
    }
}
